/**
 * Form styles
 */

.form__content {
    label {
        display: block;
        font-weight: bold;
        text-transform: uppercase;
    }

    input[type=text],
    input[type=search],
    input[type=password],
    input[type=email] {
        display: inline-block;
    }

    input[type=text],
    input[type=search],
    input[type=password],
    input[type=email],
    textarea {
        @extend %text-type--6;
        padding: em(20) em(30);
        border: 1px solid color(2);
        margin-bottom: em(10);
        border-radius: 0;
        -webkit-appearance: none;

        &._has-error {
            border-color: color(2, $colors-system);
        }

        // Make sure iOS devices don’t zoom in on focus
        @include breakpoint(false, $BP_TABLET_MAX) {
            font-size: 16px;
        }
    }

    input[type=search] {
        box-sizing: border-box;
        border-width: 2px;
        text-transform: uppercase;
    }

    textarea {
        display: block;
    }

    hr {
        width: 90%;
        border: 0;
        border-top: 1px solid color(3);
        margin: em(40) auto;
    }
}

/**
 * The form__row element is used when elements need to be put in columns
 */

.form__row {
    @extend %clearfix;
    float: none;
    clear: both;
    margin-bottom: em(20);
}

.form__row__column {
    width: 50%;
    float: left;

    &:first-of-type {
        padding-right: em(20);
    }

    input {
        width: 100%;
    }
}

/**
 * Info text to guide the user
 */
.form__info {
    @extend %text-type--6;
    @include icon(info-circle);
    position: relative;
    display: block;
    margin-bottom: em(20);
    padding: em(10) em(20) em(10) em(50);
    color: color(4);

    &:before {
        position: absolute;
        top: em(14);
        left: em(20);
        color: color(3);
    }
}

/**
 * Basic styles to group a label and it’s corresponding input field together
 */

.form__item {
    position: relative;
    margin-bottom: em(20);

    input,
    textarea {
        width: 100%;
    }
}

/**
 * A class that is added to the Medium-Editor field via JavaScript
 */

.form__editor {
    padding: em(20) em(30);
    border: 1px solid color(3);

    transition: 0.3s border-color;

    &:hover,
    &:focus {
        border: 1px solid color(2);
    }
}

/**
 * Notices with error and success states
 */

 .form__notice__wrapper {
    @extend %container;
 }

.form__notice__content {
    @extend %text-type--5;
    position: relative;
    display: inline-block;
    padding: em(7, size(5)) em(30, size(5));
    background-color: color(2);

    &._error {
        background-color: color(2, $colors-system);
    }
    &._error:after {
        border-top-color: color(2, $colors-system);
    }

    &._success {
        background-color: color(1, $colors-system);
    }
    &._success:after {
        border-top-color: color(1, $colors-system);
    }

    // CSS3 arrow
    &:after {
        content: '';
        position: absolute;
        bottom: em(-20);
        left: 10%;
        height: 0;
        width: 0;
        border: solid transparent;
        border-top-color: color(2);
        border-width: em(10);
        pointer-events: none;
    }

    &._point-up {

        // CSS3 arrow pointing up
        &:after {
            top: em(-20);
            border-color: transparent;
            border-bottom-color: color(2);
        }

        &._error:after {
            border-bottom-color: color(2, $colors-system);
        }
    }
}

.form__notice__text {
    color: color(1);
}

@include breakpoint(1300) {
    .form__notice__content {
        &._overlay {
            position: absolute;
            top: 0;
            right: 0;
            height: em(50, size(5));
            transform: translateX(110%);

            // CSS3 arrow pointing left
            &:after {
                top: 50%;
                right: 100%;
                bottom: auto;
                left: auto;
                margin-top: em(-10);
                border-color: transparent;
                border-right-color: color(2);
            }

            &._error:after {
                border-right-color: color(2, $colors-system);
            }
        }
    }
}

@include breakpoint(false, 600) {
    .form__row__column {
        width: 100%;
        float: none;

        &:first-of-type {
            padding: 0;
        }
    }
}
